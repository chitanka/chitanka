app:
    resource: "@App/Controller/"
    type:     annotation

admin:
    resource: "@SonataAdminBundle/Resources/config/routing/sonata_admin.xml"
    prefix: /admin

_sonata_admin:
    resource: .
    type: sonata_admin
    prefix: /admin

fos_comment_api:
    type: rest
    resource: "@FOSCommentBundle/Resources/config/routing.yml"
    prefix: /api
    defaults: { _format: html }

homepage:
    path:           /
    defaults:       { _controller: App:Main:index }
    methods:           [GET]

catalog:
    path:           /catalog.{_format}
    defaults:       { _controller: App:Main:catalog }
    methods:      [GET]
    requirements:   { _format: opds }


# # #   PERSONS   # # #

authors:
    path:           /authors.{_format}
    defaults:       { _controller: App:Author:index, _format: html }
    methods:      [GET]
    requirements:   { _format: html|opds|json }

authors_alt:
    path:           /author
    defaults:       { _controller: App:Main:redirect, route: authors }
    methods:         [GET]

authors_by_alpha_index:
    path:           /authors/{by}.{_format}
    defaults:       { _controller: App:Author:listByAlphaIndex, _format: html }
    methods:      [GET]
    requirements:   { by: first-name|last-name, _format: html|opds|json }
authors_by_alpha:
    path:           /authors/{by}/{letter}.{_format}/{page}
    defaults:       { _controller: App:Author:listByAlpha, page: 1, _format: html }
    methods:      [GET]
    requirements:   { by: first-name|last-name, page: \d+, _format: html|opds|json }

authors_by_country_index:
    path:           /authors/country/{by}.{_format}
    defaults:       { _controller: App:Author:listByCountryIndex, by: first-name, _format: html }
    methods:      [GET]
    requirements:   { by: first-name|last-name, _format: html|opds|json }
authors_by_country:
    path:           /authors/country/{country}/{by}.{_format}/{page}
    defaults:       { _controller: App:Author:listByCountry, by: first-name, page: 1, _format: html }
    methods:      [GET]
    requirements:   { by: first-name|last-name, page: \d+, _format: html|opds|json }

authors_search:
    path:           /authors/search.{_format}
    defaults:       { _controller: App:Author:search, _format: html }
    methods:      [GET]
    requirements:   {  _format: html|json|opds|osd|suggest|xml }

author_show:
    path:           /author/{slug}.{_format}
    defaults:       { _controller: App:Author:show, _format: html }
    methods:      [GET]
    requirements:   { _format: html|opds|json }

author_show_books:
    path:           /author/{slug}/books.{_format}
    defaults:       { _controller: App:Author:showBooks, _format: html }
    methods:      [GET]
    requirements:   { _format: html|opds|json }

author_show_texts:
    path:           /author/{slug}/texts.{_format}
    defaults:       { _controller: App:Author:showTexts, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }


translators:
    path:           /translators.{_format}
    defaults:       { _controller: App:Translator:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

translators_alt:
    path:           /translator
    defaults:       { _controller: App:Main:redirect, route: translators }
    methods:         [GET]

translators_by_alpha_index:
    path:           /translators/{by}.{_format}
    defaults:       { _controller: App:Translator:listByAlphaIndex, _format: html }
    methods: [GET]
    requirements:    {  by: first-name|last-name, _format: html|opds|json }
translators_by_alpha:
    path:           /translators/{by}/{letter}.{_format}/{page}
    defaults:       { _controller: App:Translator:listByAlpha, page: 1, _format: html }
    methods: [GET]
    requirements:    {  by: first-name|last-name, page: \d+, _format: html|opds|json }

translators_by_country_index:
    path:           /translators/country/{by}.{_format}
    defaults:       { _controller: App:Translator:listByCountryIndex, by: first-name, _format: html }
    methods: [GET]
    requirements:    {  by: first-name|last-name, _format: html|opds|json }
translators_by_country:
    path:           /translators/country/{country}/{by}.{_format}/{page}
    defaults:       { _controller: App:Translator:listByCountry, by: first-name, page: 1, _format: html }
    methods: [GET]
    requirements:    {  by: first-name|last-name, page: \d+, _format: html|opds|json }

translators_search:
    path:           /translators/search.{_format}
    defaults:       { _controller: App:Translator:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|suggest|xml }

translator_show:
    path:           /translator/{slug}.{_format}
    defaults:       { _controller: App:Translator:show, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }


persons_search:
    path:           /persons/search.{_format}
    defaults:       { _controller: App:Person:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|suggest|xml }

person_show:
    path:           /person/{slug}.{_format}
    defaults:       { _controller: App:Person:show, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

person_show_info:
    path:           /person/{slug}/info.{_format}
    defaults:       { _controller: App:Person:showInfo, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json }

person_suggest:
    path:           /person/{slug}/suggest
    defaults:       { _controller: App:Person:suggest }

# # #   SERIES   # # #

series:
    path:           /series.{_format}
    defaults:       { _controller: App:Series:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

series_alt:
    path:           /serie
    defaults:       { _controller: App:Main:redirect, route: series }
    methods:         [GET]

series_search:
    path:           /series/search.{_format}
    defaults:       { _controller: App:Series:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|xml|suggest }

series_by_alpha:
    path:           /series/alpha/{letter}.{_format}/{page}
    defaults:       { _controller: App:Series:listByAlpha, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

series_show:
    path:           /serie/{slug}.{_format}
    defaults:       { _controller: App:Series:show, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }


# # #   BOOKS   # # #

books:
    path:           /books.{_format}
    defaults:       { _controller: App:Book:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

books_alt:
    path:           /book
    defaults:       { _controller: App:Main:redirect, route: books }
    methods:         [GET]

books_search:
    path:           /books/search.{_format}
    defaults:       { _controller: App:Book:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|suggest|xml }

books_by_alpha:
    path:           /books/alpha/{letter}.{_format}/{page}
    defaults:       { _controller: App:Book:listByAlpha, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

books_by_category:
    path:           /books/category/{slug}.{_format}/{page}
    defaults:       { _controller: App:Book:listByCategory, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

books_wo_cover:
    path:           /books/wo-cover/{page}
    defaults:       { _controller: App:Book:listWoCover, page: 1 }
    methods: [GET]
    requirements:    {  page: \d+ }

books_by_isbn:
    path:           /books/isbn/{isbn}.{_format}
    defaults:       { _controller: App:Book:listByIsbn, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json }

books_by_alpha_index:
    path:           /books/alpha.{_format}
    defaults:       { _controller: App:Book:listByAlphaIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

books_by_category_index:
    path:           /books/category.{_format}
    defaults:       { _controller: App:Book:listByCategoryIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

book_random:
    path:           /book/random
    defaults:       { _controller: App:Book:random }
    methods:         [GET]

book_show:
    path:           /book/{id}.{_format}
    defaults:       { _controller: App:Book:show, _format: html }
    methods: [GET]

book_comments:
    path:           /book/{id}/comments.{_format}
    defaults:       { _controller: App:Book:comments, _format: html }

# # #   BOOK SEQUENCES   # # #

sequences:
    path:           /sequences.{_format}
    defaults:       { _controller: App:Sequence:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

sequences_alt:
    path:           /sequence
    defaults:       { _controller: App:Main:redirect, route: sequences }
    methods:         [GET]

sequences_search:
    path:           /sequences/search.{_format}
    defaults:       { _controller: App:Sequence:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|suggest|xml }

sequences_by_alpha:
    path:           /sequences/alpha/{letter}.{_format}/{page}
    defaults:       { _controller: App:Sequence:listByAlpha, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

sequence_show:
    path:           /sequence/{slug}.{_format}
    defaults:       { _controller: App:Sequence:show, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }


# # #   TEXTS   # # #

texts_comments:
    path:           /texts/comments.{_format}/{page}
    defaults:       { _controller: App:TextComment:index, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|json|rss }

texts:
    path:           /texts.{_format}
    defaults:       { _controller: App:Text:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_alt:
    path:           /text
    defaults:       { _controller: App:Main:redirect, route: texts }
    methods:         [GET]

texts_search:
    path:           /texts/search.{_format}
    defaults:       { _controller: App:Text:search, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|suggest|xml }

texts_by_alpha:
    path:           /texts/alpha/{letter}.{_format}/{page}
    defaults:       { _controller: App:Text:listByAlpha, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

texts_by_type:
    path:           /texts/type/{type}.{_format}/{page}
    defaults:       { _controller: App:Text:listByType, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

texts_by_label:
    path:           /texts/label/{slug}.{_format}/{page}
    defaults:       { _controller: App:Text:listByLabel, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

texts_by_language:
    path:           /texts/language/{language}.{_format}/{page}
    defaults:       { _controller: App:Text:listByLanguage, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

texts_by_original_language:
    path:           /texts/original-language/{language}.{_format}/{page}
    defaults:       { _controller: App:Text:listByOriginalLanguage, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|opds|json }

texts_by_alpha_index:
    path:           /texts/alpha.{_format}
    defaults:       { _controller: App:Text:listByAlphaIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_by_type_index:
    path:           /texts/type.{_format}
    defaults:       { _controller: App:Text:listByTypeIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_by_label_index:
    path:           /texts/label.{_format}
    defaults:       { _controller: App:Text:listByLabelIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_by_language_index:
    path:           /texts/language.{_format}
    defaults:       { _controller: App:Text:listByLanguageIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_by_original_language_index:
    path:           /texts/original-language.{_format}
    defaults:       { _controller: App:Text:listByOriginalLanguageIndex, _format: html }
    methods: [GET]
    requirements:    {  _format: html|opds|json }

texts_label_log:
    path:           /texts/label-log
    defaults:       { _controller: App:Text:fullLabelLog }
    methods:         [GET]

text_label_new:
    path:           /text/{id}/label/new/group/{group}
    defaults:       { _controller: App:Text:newLabel }
text_label_delete:
    path:           /text/{id}/label/{labelId}
    defaults:       { _controller: App:Text:deleteLabel }
    methods:         [DELETE]

text_label_log:
    path:           /text/{id}/label-log
    defaults:       { _controller: App:Text:labelLog }
    methods:         [GET]

text_random:
    path:           /text/random
    defaults:       { _controller: App:Text:random }
    methods:         [GET, POST]

text_comments:
    path:           /text/{id}/comments.{_format}
    defaults:       { _controller: App:TextComment:listForText, _format: html }

text_ratings:
    path:           /text/{id}/ratings
    defaults:       { _controller: App:Text:ratings }

text_rating:
    path:           /text/{id}/rating
    defaults:       { _controller: App:Text:rating }

text_similar:
    path:           /text/{id}/similar
    defaults:       { _controller: App:Text:similar }
    methods:         [GET]

text_read:
    path:           /text/{id}/read
    defaults:       { _controller: App:Text:markRead }
    methods: [POST]
    requirements:    {  id: \d+ }

text_bookmark:
    path:           /text/{id}/mark
    defaults:       { _controller: App:Text:addBookmark }
    methods: [POST]
    requirements:    {  id: \d+ }

text_show:
    path:           /text/{id}.{_format}
    defaults:       { _controller: App:Text:show, slug: test, _format: html }
    methods: [GET]

text_show_part:
    path:           /text/{id}/{part}.{_format}
    defaults:       { _controller: App:Text:showPart, part: 1, _format: html }
    requirements:   { part: \d+ }


search:
    path:         /search.{_format}
    defaults:     { _controller: App:Search:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json|opds|osd|xml|suggest }

sandbox:
    path:      /sandbox
    defaults: { _controller: App:Sandbox:index }

feedback:
    path:      /feedback
    defaults: { _controller: App:Feedback:index }

statistics:
    path:      /statistics
    defaults: { _controller: App:Statistics:index }


new:
    path:      /new.{_format}
    defaults: { _controller: App:History:index, _format: html }
    methods: [GET]
    requirements:    {  _format: html|json }

new_books:
    path:      /new/books.{_format}/{page}
    defaults: { _controller: App:History:listBooks, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|rss|opds|json }

new_books_by_month:
    path:      /new/books/{year}/{month}.{_format}/{page}
    defaults: { _controller: App:History:listBooksByMonth, page: 1, _format: html }
    methods:  [GET]
    requirements:
        year: \d+
        month: \d+
        page: \d+
        _format: html|opds|json

new_books_by_day:
    path:      /new/books/{year}/{month}/{day}.{_format}/{page}
    defaults: { _controller: App:History:listBooksByDay, page: 1, _format: html }
    methods:  [GET]
    requirements:
        year: \d+
        month: \d+
        day: \d+
        page: \d+
        _format: html|json

new_texts:
    path:      /new/texts.{_format}/{page}
    defaults: { _controller: App:History:listTexts, page: 1, _format: html }
    methods: [GET]
    requirements:    {  page: \d+, _format: html|rss|opds|json }

new_texts_by_month:
    path:      /new/texts/{year}/{month}.{_format}/{page}
    defaults: { _controller: App:History:listTextsByMonth, page: 1, _format: html }
    methods:         [GET]
    requirements:
        year: \d+
        month: \d+
        page: \d+
        _format: html|opds|json

new_texts_by_day:
    path:      /new/texts/{year}/{month}/{day}.{_format}/{page}
    defaults: { _controller: App:History:listTextsByDay, page: 1, _format: html }
    methods:         [GET]
    requirements:
        year: \d+
        month: \d+
        day: \d+
        page: \d+
        _format: html|json

email_user:
    path:      /email/{username}
    defaults: { _controller: App:Email:new }
    options:
        segment_separators: [/]
# settings
user_edit:
    path:      /user/{username}/edit
    defaults: { _controller: App:User:edit }
    options:
        segment_separators: [/]
user_show:
    path:      /user/{username}
    defaults: { _controller: App:User:show }
    methods:      [GET]
    options:
        segment_separators: [/]
# old edituserpage
user_page_edit:
    path:      /user/{username}/page
    defaults: { _controller: App:User:page }
    options:
        segment_separators: [/]

user_comments:
    path:      /user/{username}/comments/{page}
    defaults: { _controller: App:User:comments, page: 1 }
    methods:      [GET]
    requirements: { page: \d+ }
    options:
        segment_separators: [/]

user_ratings:
    path:      /user/{username}/ratings
    defaults: { _controller: App:User:ratings }
    methods:      [GET]
    options:
        segment_separators: [/]

user_contribs:
    path:      /user/{username}/contribs/{page}
    defaults: { _controller: App:User:contribs, page: 1 }
    methods:      [GET]
    requirements: { page: \d+ }
    options:
        segment_separators: [/]

user_read_list:
    path:      /user/{username}/read/{page}
    defaults: { _controller: App:User:readList, page: 1 }
    methods:      [GET]
    requirements: { page: \d+ }
    options:
        segment_separators: [/]

user_bookmarks:
    path:      /user/{username}/bookmarks/{page}
    defaults: { _controller: App:User:bookmarks, page: 1 }
    methods: [GET]
    requirements:    {  page: \d+ }
    options:
        segment_separators: [/]

user_special_texts:
    path:      /user-special-texts
    defaults: { _controller: App:User:specialTexts }


register:
    path:      /register
    defaults: { _controller: App:Security:register }
login:
    path:      /login
    defaults: { _controller: App:Security:login }
login_check:
    path:      /login_check
# logout:
#     path:      /logout
logout:
    path:      /signout
    defaults: { _controller: App:Security:logout }

request_password:
    path:      /request-password
    defaults: { _controller: App:Security:requestPassword }
request_username:
    path:      /request-username
    defaults: { _controller: App:Security:requestUsername }


workroom_entry_new:
    path:      /workroom/entry
    defaults: { _controller: App:Workroom:new }
    methods:      [GET]
workroom_entry_create:
    path:      /workroom/entry
    defaults: { _controller: App:Workroom:create }
    methods:      [POST]
workroom_entry_edit:
    path:      /workroom/entry/{id}
    defaults: { _controller: App:Workroom:edit }
    methods:      [GET]
    requirements:    {  id: \d+ }
workroom_entry_update:
    path:      /workroom/entry/{id}
    defaults: { _controller: App:Workroom:update }
    methods:      [PUT]
    requirements:    {  id: \d+ }
workroom_entry_patch:
    path:      /workroom/entry/{id}.patch
    defaults: { _controller: App:Workroom:patch }
    methods:      [PATCH]
    requirements:    {  id: \d+ }
workroom_entry_delete:
    path:      /workroom/entry/{id}
    defaults: { _controller: App:Workroom:delete }
    methods:      [DELETE]
    requirements:    {  id: \d+ }

workroom_contrib:
    path:      /workroom/contributors
    defaults: { _controller: App:Workroom:listContributors }
    methods:      [GET]

workroom_list:
    path:      /workroom/list.{_format}
    defaults: { _controller: App:Workroom:list }
    methods:      [GET]

workroom_contrib_delete:
    path:      /workroom/contrib/{id}
    defaults: { _controller: App:Workroom:deleteContrib }
    methods:      [DELETE]
    requirements:    {  id: \d+ }

workroom:
    path:      /workroom/{status}/{page}
    defaults: { _controller: App:Workroom:index, status: all, page: 1 }
    requirements: { page: \d+ }

workroom_rss:
    path:      /workroom.rss/{limit}
    defaults: { _controller: App:Workroom:rss, limit: 25 }
    methods:      [GET]

suggest_info:
    path:     /suggest/{type}/text/{id}
    defaults: { _controller: App:InfoSuggestion:index }

message:
    path:     /message
    defaults: { _controller: App:Message:index }

wiki_save:
    path:     /wiki/save
    defaults: { _controller: App:Wiki:save }
    methods:  [POST]

wiki_preview:
    path:     /wiki/preview
    defaults: { _controller: App:Wiki:preview }
    methods:  [POST]

wiki_history:
    path:     /wiki/history/{page}
    defaults: { _controller: App:Wiki:history }
    requirements: { page: .+ }

wiki:
    path:     /{page}
    defaults: { _controller: App:Wiki:show }
    requirements: { page: .+ }
